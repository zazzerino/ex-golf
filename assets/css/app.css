@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/* This file is for your main application CSS */

:root {
  --game-width: 600px;
  --game-height: 500px;

  --card-width: 60px;
  --card-height: 84px;

  --animation-time: 10s;

  --deck-x: calc(var(--card-width) / -2);
  --deck-y: 0px;

  --table-x: calc(var(--card-width) / 2);
  --table-y: 0px;

  --hand-bottom-x: 0px;
  --hand-bottom-y: calc(var(--game-height) / 2 - var(--card-height));

  --hand-left-x: calc(var(--game-width) / -2 + var(--card-height));
  --hand-left-y: 0px;

  --hand-top-x: 0px;
  --hand-top-y: calc(var(--game-height) / -2 + var(--card-height));

  --hand-right-x: calc(var(--game-width) / 2 - var(--card-height));
  --hand-right-y: 0px;

  --held-card-bottom-x: calc(var(--card-width) * 2.5);
  --held-card-bottom-y: var(--hand-bottom-y);

  --held-card-left-x: var(--hand-left-x);
  --held-card-left-y: calc(var(--card-width) * 2.5);

  --held-card-top-x: calc(var(--card-width) * -2.5);
  --held-card-top-y: var(--hand-top-y);

  --held-card-right-x: var(--hand-right-x);
  --held-card-right-y: calc(var(--card-width) * -2.5);
}

.game-svg {
  width: var(--game-width);
  height: var(--game-height);
  background-color: seagreen;
}

g.hand.bottom {
  transform: translate(var(--hand-bottom-x), var(--hand-bottom-y));
}

g.hand.left {
  transform: translate(var(--hand-left-x), var(--hand-left-y)) 
             rotate(90deg);
}

g.hand.top {
  transform: translate(var(--hand-top-x), var(--hand-top-y)) 
             rotate(180deg);
}

g.hand.right {
  transform: translate(var(--hand-right-x), var(--hand-right-y)) 
             rotate(270deg);
}

.card.held.bottom {
  transform: translate(var(--held-card-bottom-x), var(--held-card-bottom-y));
}

.card.held.left {
  transform: translate(var(--held-card-left-x), var(--held-card-left-y))
             rotate(90deg);
}

.card.held.top {
  transform: translate(var(--held-card-top-x), var(--held-card-top-y))
             rotate(180deg);
}

.card.held.right {
  transform: translate(var(--held-card-right-x), var(--held-card-right-y))
             rotate(270deg);
}

@keyframes deal-deck {
  from {
    transform: translateY(calc(var(--game-height) / -2)) rotate(90deg);
  }
}

.card.deck.deal {
  animation: deal-deck var(--animation-time);
}

@keyframes slide-from-deck {
  from {
    transform: translate(var(--deck-x), var(--deck-y));
  }
}

.card.slide-from-deck {
  animation: slide-from-deck var(--animation-time);
}

@keyframes slide-from-table {
  from {
    transform: translate(var(--table-x), var(--table-y));
  }
}

.card.slide-from-table {
  animation: slide-from-table var(--animation-time);
}
